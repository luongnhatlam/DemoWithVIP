//
//  CounterViewController.swift
//  DemoWithVIP
//
//  Created by Lương Nhật Lâm on 10/26/17.
//  Copyright (c) 2017 Lương Nhật Lâm. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol CounterViewControllerInput
{
  func displaySomething(viewModel: Counter.Something.ViewModel)
}

protocol CounterViewControllerOutput
{
  func doSomething(request: Counter.Something.Request)
    func increase(request:Counter.Something.Increase)
    func decrease(request:Counter.Something.Decrease)
}

class CounterViewController: UIViewController, CounterViewControllerInput
{
  var output: CounterViewControllerOutput!
  var router: CounterRouter!
    @IBOutlet weak var numberLabel: UILabel!
  
  // MARK: - Object lifecycle
  
  override func awakeFromNib()
  {
    super.awakeFromNib()
    CounterConfigurator.sharedInstance.configure(viewController: self)
  }
  
  // MARK: - View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    doSomethingOnLoad()
  }
  
  // MARK: - Event handling
  
  func doSomethingOnLoad()
  {
    // NOTE: Ask the Interactor to do some work
    
    let request = Counter.Something.Request()
    output.doSomething(request: request)
  }
  
  // MARK: - Display logic
  
  func displaySomething(viewModel: Counter.Something.ViewModel)
  {
    // NOTE: Display the result from the Presenter
    
    self.numberLabel.text   = viewModel.result
  }
    
    @IBAction func increaseAction(_ sender: Any) {
        let request = Counter.Something.Increase()
        output.increase(request: request)
    }
    
    @IBAction func decreaseAction(_ sender: Any) {
        let request = Counter.Something.Decrease()
        output.decrease(request: request)
    }
}

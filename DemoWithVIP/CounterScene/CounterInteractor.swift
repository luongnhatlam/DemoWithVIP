//
//  CounterInteractor.swift
//  DemoWithVIP
//
//  Created by Lương Nhật Lâm on 10/26/17.
//  Copyright (c) 2017 Lương Nhật Lâm. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol CounterInteractorInput
{
  func doSomething(request: Counter.Something.Request)
}

protocol CounterInteractorOutput
{
  func presentSomething(response: Counter.Something.Response)
}

class CounterInteractor: CounterInteractorInput
{
    var output: CounterInteractorOutput!
    var worker: CounterWorker!
    var number:Int = 0
  
  // MARK: - Business logic
  
  func doSomething(request: Counter.Something.Request)
  {
    // NOTE: Create some Worker to do the work
    
    worker = CounterWorker()
    worker.doSomeWork()
    
    // NOTE: Pass the result to the Presenter
    
    let response = Counter.Something.Response(number: self.number)
    output.presentSomething(response: response)
  }
    
    func increase(request: Counter.Something.Increase) {
        number = worker.increase(number: number)
        let response = Counter.Something.Response(number: self.number)
        output.presentSomething(response: response)
    }
    
    func decrease(request: Counter.Something.Decrease) {
        number = worker.decrease(number: number)
        let response = Counter.Something.Response(number: self.number)
        output.presentSomething(response: response)
    }
}
